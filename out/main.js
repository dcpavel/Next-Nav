"use strict";var M=Object.create;var v=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var W=(e,s)=>{for(var t in s)v(e,t,{get:s[t],enumerable:!0})},P=(e,s,t,n)=>{if(s&&typeof s=="object"||typeof s=="function")for(let a of S(s))!R.call(e,a)&&a!==t&&v(e,a,{get:()=>s[a],enumerable:!(n=C(s,a))||n.enumerable});return e};var f=(e,s,t)=>(t=e!=null?M(T(e)):{},P(s||!e||!e.__esModule?v(t,"default",{value:e,enumerable:!0}):t,e)),j=e=>P(v({},"__esModule",{value:!0}),e);var _={};W(_,{activate:()=>z,deactivate:()=>V});module.exports=j(_);var i=f(require("vscode")),m=f(require("path"));var k=f(require("fs/promises")),E=require("readline"),D=require("fs"),g=f(require("path"));async function I(e){let s=(0,E.createInterface)({input:(0,D.createReadStream)(e,{end:9999})}),t="",n=!1;for await(let r of s){if(n){r.includes("*/")&&(n=!1);continue}let c=r.indexOf("/*");if(c!==-1){n=!0;let l=r.indexOf("*/");if(l!==-1&&l>c){n=!1;let o=r.slice(0,c)+r.slice(l+2);if(o.trim()){t=o.trim();break}continue}continue}let w=r.split("//")[0].trim();if(w){t=w;break}}return s.close(),['"use client"',"'use client'","`use client`"].some(r=>t.includes(r))}async function b(e){let s=1,t=/\.(js|jsx|css|ts|tsx|sass|scss|html)$/,n=[{id:0,folderName:g.basename(e),parentNode:null,path:e,contents:[],render:"server"}];async function a(r,c){let w=await k.readdir(r,{withFileTypes:!0});for(let l of w){let o=g.join(r,l.name);if(l.isDirectory()){let h={id:s++,folderName:l.name,parentNode:c,path:o,contents:[],render:"server"};n.push(h),await a(o,h.id)}else t.test(l.name)&&(n[c].contents.push(l.name),await I(o)&&(n[c].render="client"))}}try{return await a(e,0),n}catch{return{}}}var p=require("fs");var N=f(require("fs/promises")),u=f(require("path")),y=f(require("vscode"));function L(e,s){let t=u.resolve(e).toLowerCase(),n=u.resolve(s).toLowerCase();return console.log("p: "+t),console.log("c: "+n),t.startsWith(n)}async function F(e){try{if(!y.workspace.workspaceFolders)return"";let s=y.workspace.workspaceFolders[0].uri.fsPath,t=u.isAbsolute(e)?e:u.join(s,e);return console.log(t),L(t,s)?(await N.stat(t)).isDirectory()?t:(console.log("doesnt exist"),""):(console.log("workspace: ",s),console.log("absolute: ",t),console.log("not within working dir"),"")}catch{return""}}var x=null,d=null;async function O(e,s){try{let t=await b(s),n=JSON.stringify(t);e.webview.postMessage({command:"sendString",data:n})}catch(t){i.window.showErrorMessage("Error sending updated directory: "+t.message)}}function z(e){let s="next-nav-icon";e.globalState.update(s,!0);let t=i.window.createStatusBarItem(i.StatusBarAlignment.Right);t.text="Next.Nav",t.command="next-extension.next-nav",t.tooltip="Launch Next Nav",t.show(),e.subscriptions.push(t);let n=i.commands.registerCommand("next-extension.next-nav",async()=>{if(d)d.reveal(i.ViewColumn.One);else{if(d=i.window.createWebviewPanel("Next.Nav","Next.Nav",i.ViewColumn.One,{enableScripts:!0,retainContextWhenHidden:!0}),d.onDidDispose(()=>{d=null},null,e.subscriptions),d===null)throw new Error("Webview is null");let a=d;a.webview.onDidReceiveMessage(async r=>{switch(console.log("Received message:",r),r.command){case"submitDir":let c=!1;r.form&&(c=!0);let w=await F(m.normalize(r.folderName));w?(x=w,a.webview.postMessage({command:"submitDirResponse",result:!0,form:c})):(r.showError&&i.window.showErrorMessage("Invalid directory: "+r.folderName),a.webview.postMessage({command:"submitDirResponse",result:!1,form:c}));break;case"getRequest":x?await O(a,x):(console.error("No directory has been submitted yet."),i.window.showErrorMessage("No directory has been submitted yet."));break;case"open_file":let l=r.filePath;try{let o=await i.workspace.openTextDocument(l);await i.window.showTextDocument(o),console.log(`Switched to tab with file: ${l}`)}catch(o){i.window.showErrorMessage(`Error opening file: ${o.message}`),console.error(`Error opening file: ${o}`)}break;case"addFile":try{let o=r.filePath;await p.promises.writeFile(m.normalize(o),""),a.webview.postMessage({command:"added_addFile"})}catch(o){console.error("Error creating file:",o.message),i.window.showErrorMessage("Error creating file: "+o.message)}break;case"addFolder":try{let o=r.filePath;await p.promises.mkdir(m.normalize(o)),a.webview.postMessage({command:"added_addFolder"})}catch(o){console.error("Error creating folder:",o.message),i.window.showErrorMessage("Error creating folder: "+o.message)}break;case"deleteFile":try{let o=r.filePath,h=i.Uri.file(m.normalize(o));if(await p.promises.stat(o))await i.workspace.fs.delete(h,{useTrash:!0});else throw new Error("File does not exist");a.webview.postMessage({command:"added_deleteFile"})}catch(o){console.error("Error deleting file:",o.message),i.window.showErrorMessage("Error deleting file: "+o.message)}break;case"deleteFolder":try{let o=r.filePath,h=i.Uri.file(m.normalize(o));if(await p.promises.stat(o))await i.workspace.fs.delete(h,{recursive:!0,useTrash:!0});else throw new Error("Folder does not exist");a.webview.postMessage({command:"added_deleteFolder"})}catch(o){i.window.showErrorMessage("Error deleting folder: "+o.message)}break}},void 0,e.subscriptions);try{let r=m.join(e.extensionPath,"webview-react-app","dist","bundle.js"),c=await p.promises.readFile(r,"utf-8");d.webview.html=`
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="UTF-8">
          <title>Next.Nav</title>
          <link rel="icon" type="image/x-icon" href="">
        </head>
        <body>
          <div id="root"></div>
          <script>
          ${c}
          </script>
        </body>
        </html>`}catch(r){console.log(r)}}});e.subscriptions.push(n)}function V(){}0&&(module.exports={activate,deactivate});
